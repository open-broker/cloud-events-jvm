plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.30"
    id 'maven-publish'
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

group = 'org.openbroker'
version = '1.0.2'
description = 'Library for cloud events'

defaultTasks 'test'

project.ext {
    kotlin_version = '1.3.30'
    kotlin_api_version = '1.3'
    jvm_version = '1.8'
}

apply from: "jar.gradle"

repositories {
    mavenCentral()
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.10.1'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version:'2.10.1'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.1'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.4.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.4.0")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = kotlin_api_version
        apiVersion = kotlin_api_version
        jvmTarget = jvm_version
        javaParameters = true   // Useful for reflection.
    }
}

compileJava {
    sourceCompatibility = jvm_version
    targetCompatibility = jvm_version
    options.incremental = true
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

wrapper {
    description = 'Generates gradlew[.bat] scripts for faster execution'
    gradleVersion = '5.2.1'
}

publishing {
    repositories {
        maven {
            url = uri("https://maven.pkg.github.com/open-broker/cloud-events-jvm")
            credentials {
                username = System.getenv("GITHUB_PACKAGES_USERNAME")
                password = System.getenv("GITHUB_PACKAGES_PASSWORD")
            }
        }
    }
    publications {
        github(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}